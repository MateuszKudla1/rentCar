package carrent.core.ejb.pdf;



import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;

import javax.ejb.Stateless;


import javax.ejb.Stateless;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;

import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfDocument;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import carrent.core.model.person.customer.ConfirmedCustomer;
import carrent.core.model.rent.Rent;

@Stateless
public class PDFgenerator {
	private static String FILE = "C:/Users/Mateusz/Desktop/Projekt java ee/invoice.pdf";
	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
	private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
	private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

	private ConfirmedCustomer confirmedCustomer;
	private Rent rent;
	

	public void createPdf(ConfirmedCustomer confirmedCustomer,Rent rent )
			throws IOException, DocumentException {

		this.confirmedCustomer = confirmedCustomer;
		this.rent =rent;

		Document document = new Document();
		PdfWriter.getInstance(document, new FileOutputStream(FILE));
		document.open();
		addMetaData(document);
		addTitlePage(document);
		document.close();

	}

	private void addMetaData(Document document) {
		document.addTitle("My first PDF");
		document.addSubject("Rent");
		document.addKeywords("Java, PDF, iText");
		document.addAuthor("Mateusz Kudla and Daniel Szczygiel");
		document.addCreator("Mateusz Kudla and Daniel Szczygiel");
	}

	private void addTitlePage(Document document) throws DocumentException {
		Paragraph preface = new Paragraph();
		// We add one empty line
		addEmptyLine(preface, 1);
		// Lets write a big header
		preface.add(new Paragraph(
				"Invoice for: " + confirmedCustomer.getFirstName() + " " + confirmedCustomer.getLastName(), catFont));
	

		addEmptyLine(preface, 1);
		// Will create: Report generated by: _name, _date
		preface.add(new Paragraph("Report generated at: " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$
																		// //$NON-NLS-3$
				smallBold));
		addEmptyLine(preface, 3);
		preface.add(new Paragraph(
				"Invoice has beed genereted for order: ID: " + rent.getId() + ", "
						+ rent.getVehicle() + ", with cost: " + rent.getCost(),
				subFont));

		addEmptyLine(preface, 8);

		preface.add(new Paragraph("Invoice genereted by Rent Car system.", redFont));

		document.add(preface);
		// Start a new page
		document.newPage();
	}

	private void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}

}
